name: hand written cgo symbols
files:
  - net/cgo_linux.go
  - net/cgo_resnew.go
  - net/cgo_stub.go
  - net/cgo_unix.go
  - os/user/getgrouplist_unix.go
  - os/user/lookup_unix.go
# only the variable data type is needed
# all constants defined via #DEFINE are untyped
variables:
- name: AI_CANONNAME
  type:
    constant: int
- name: AI_V4MAPPED
  type:
    constant: int
- name: AI_ALL
  type:
    constant: int
- name: NI_NAMEREQD
  type:
    identifier: C.int
- name: EAI_AGAIN
  type:
    constant: int
- name: SOCK_STREAM
  type:
    constant: int
- name: IPPROTO_TCP
  type:
    identifier: C.int
- name: SOCK_DGRAM
  type:
    identifier: C.int
- name: IPPROTO_UDP
  type:
    identifier: C.int
- name: AF_UNSPEC
  type:
    identifier: C.int
- name: AF_INET
  type:
    identifier: C.int
- name: AF_INET6
  type:
    identifier: C.int
- name: EAI_SYSTEM
  type:
    identifier: C.int
- name: EAI_NONAME
  type:
    identifier: C.int
- name: EAI_OVERFLOW
  type:
    constant: int
- name: _SC_GETPW_R_SIZE_MAX
  type:
    constant: int
- name: _SC_GETGR_R_SIZE_MAX
  type:
    constant: int
- name: PATH_MAX
  type:
    constant: int
- name: RTLD_LAZY
  type:
    constant: int
- name: _SC_CLK_TCK
  type:
    constant: int
- name: __TASKSTATS_CMD_MAX
  type:
    constant: int
- name: nvmlHandle
  type:
    pointer:
      identifier: C.void
- name: NVML_GPU_UTILIZATION_SAMPLES
  type:
    constant: int
- name: NVML_TOTAL_POWER_SAMPLES
  type:
    constant: int
- name: NVML_SUCCESS
  type:
    constant: int
- name: NVML_DEVICE_UUID_BUFFER_SIZE
  type:
    constant: int
- name: NVML_DEVICE_NAME_BUFFER_SIZE
  type:
    constant: int
- name: NVML_SYSTEM_DRIVER_VERSION_BUFFER_SIZE
  type:
    constant: int
- name: NVML_ERROR_LIBRARY_NOT_FOUND
  type:
    constant: int
- name: _SC_NPROCESSORS_ONLN
  type:
    constant: int
- name: O_RDWR
  type:
    constant: int
# no need to know definition of the data type, just its name
types:
- name: struct_sockaddr
  type:
    identifier: C.struct_sockaddr
- name: socklen_t
  type:
    identifier: C.socklen_t
- name: char
  type:
    identifier: C.char
- name: int
  type:
    identifier: C.int
- name: ulonglong
  type:
    identifier: C.ulonglong
- name: uint
  type:
    identifier: C.uint
- name: struct_addrinfo
  type:
    struct:
    - name: ai_flags
      identifier: C.int
    - name: ai_socktype
      identifier: C.int
    - name: ai_protocol
      identifier: C.int
    - name: ai_canonname
      pointer:
        identifier: C.char
    - name: ai_family
      identifier: C.int
    - name: ai_addr
      pointer:
        identifier: C.int
- name: gid_t
  type:
    struct:
- name: struct_passwd
  type:
    struct:
    - name: pw_uid
      identifier: C.int
    - name: pw_gid
      identifier: C.int
    - name: pw_name
      pointer:
        identifier: C.char
    - name: pw_gecos
      pointer:
        identifier: C.char
    - name: pw_dir
      pointer:
        identifier: C.char
- name: size_t
  type:
    identifier: C.size_t
- name: struct_group
  type:
    struct:
    - name: gr_gid
      identifier: C.int
    - name: gr_name
      pointer:
        identifier: C.char
- name: nvmlUtilization_t
  type:
    struct:
    - name: gpu
      identifier: C.uint
    - name: memory
      identifier: C.uint
- name: nvmlMemory_t
  type:
    struct:
    - name: total
      identifier: C.ulonglong
    - name: free
      identifier: C.ulonglong
    - name: used
      identifier: C.ulonglong
- name: nvmlReturn_t
  type:
    identifier: C.uint
# ???
functions:
- name: getnameinfo
  params:
  - pointer:
      identifier: C.struct_sockaddr
  - identifier: C.socklen_t
  - pointer:
      identifier: C.char
  - identifier: C.socklen_t
  - pointer:
      identifier: C.char
  - identifier: C.socklen_t
  - identifier: C.int
  result:
  - identifier: C.int
- name: GoString
  result:
  - identifier: string
- name: CString
  result:
  - pointer:
      identifier: string
- name: gai_strerror
  result:
  - pointer:
      identifier: C.char
- name: free
  result:
- name: getaddrinfo
  result:
  - identifier: C.int
- name: freeaddrinfo
  result:
- name: mygetgrouplist
  params:
  - pointer:
      identifier: C.char
  - identifier: C.gid_t
  - pointer:
      identifier: C.int
- name: mygetpwnam_r
  params:
  - pointer:
      identifier: C.char
  - pointer:
      identifier: C.struct_passwd
  - pointer:
      identifier: C.char
  - identifier: C.size_t
  - pointer:
      pointer:
        identifier: C.struct_passwd
  result:
  - identifier: C.int
- name: mygetpwuid_r
  params:
  - identifier: C.int
  - pointer:
      identifier: C.struct_passwd
  - pointer:
      identifier: C.char
  - identifier: C.size_t
  - pointer:
      pointer:
        identifier: C.struct_passwd
  result:
  - identifier: C.int
- name: mygetgrnam_r
  params:
  - pointer:
      identifier: C.char
  - pointer:
      identifier: C.struct_group
  - pointer:
      identifier: C.char
  - identifier: C.size_t
  - pointer:
      pointer:
        identifier: C.struct_group
  result:
  - identifier: C.int
- name: mygetgrgid_r
  params:
  - identifier: C.int
  - pointer:
      identifier: C.struct_group
  - pointer:
      identifier: C.char
  - identifier: C.size_t
  - pointer:
      pointer:
        identifier: C.struct_group
  result:
  - identifier: C.int
- name: sysconf
  params:
  - identifier: C.int
  result:
  - identifier: C.long
- name: malloc
  params:
  - identifier: C.size_t
  result:
  - identifier: unsafe.Pointer
- name: realloc
  params:
  - identifier: unsage.Pointer
  - identifier: C.size_t
  result:
  - identifier: unsafe.Pointer
- name: realpath
  params:
  - pointer:
      identifier: C.char
  - pointer:
      identifier: C.char
  result:
  - pointer:
      identifier: C.char
- name: pluginOpen
  params:
  - pointer:
      identifier: C.char
  - pointer:
      pointer:
        identifier: C.char
  result:
  - identifier: C.uintptr_t
- name: pluginLookup
  params:
  - identifier: C.uintptr_t
  - pointer:
      identifier: C.char
  - pointer:
      pointer:
        identifier: C.char
  result:
  - pointer:
      identifier: C.void
- name: dlerror
  result:
  - pointer:
      identifier: C.char
- name: dlopen
  params:
  - pointer:
      identifier: C.char
  - identifier: C.int
  result:
  - pointer:
      identifier: C.void
- name: dlclose
  params:
  - pointer:
      identifier: C.void
  result:
  - identifier: C.int
- name: dlsym
  params:
  - pointer:
      identifier: C.void
  - pointer:
      identifier: C.char
  result:
  - pointer:
      identifier: C.void
- name: my_strlen
  params:
  - pointer:
      identifier: C.void
  - pointer:
      identifier: C.char
  result:
  - identifier: C.int
- name: my_sd_pid_get_owner_uid
  params:
  - pointer:
      identifier: C.void
    identifier: C.pid_t
  - pointer:
      identifier: C.uid_t
  result:
  - identifier: C.int
- name: my_sd_pid_get_unit
  params:
  - pointer:
      identifier: C.void
    identifier: C.pid_t
  - pointer:
      pointer:
        identifier: C.unit
  result:
  - identifier: C.int
- name: my_sd_pid_get_slice
  params:
  - pointer:
      identifier: C.void
    identifier: C.pid_t
  - pointer:
      pointer:
        identifier: C.char
  result:
  - identifier: C.int
- name: am_session_leader
  result:
  - identifier: C.int
- name: nvmlDeviceGetAverageUsage
  params:
  - identifier: C.nvmlDevice_t
  - identifier: C.nvmlSamplingType_t
  - identifier: C.ulonglong
  - pointer:
      identifier: C.uint
  result:
  - identifier: C.nvmlReturn_t
- name: nvmlDeviceGetPowerUsage
  params:
  - identifier: C.nvmlDevice_t
  - pointer:
      identifier: C.uint
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlDeviceGetUtilizationRates(nvmlDevice_t device, nvmlUtilization_t *utilization)
- name: nvmlDeviceGetUtilizationRates
  params:
  - identifier: C.nvmlDevice_t
  - pointer:
      identifier: C.nvmlUtilization_t
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlDeviceGetMemoryInfo(nvmlDevice_t device, nvmlMemory_t *memory)
- name: nvmlDeviceGetMemoryInfo
  params:
  - identifier: C.nvmlDevice_t
  - pointer:
      identifier: C.nvmlMemory_t
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlDeviceGetName(nvmlDevice_t device, char *name, unsigned int length)
- name: nvmlDeviceGetName
  params:
  - identifier: C.nvmlDevice_t
  - pointer:
      identifier: C.char
  - identifier: C.uint
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlDeviceGetUUID(nvmlDevice_t device, char *uuid, unsigned int length)
- name: nvmlDeviceGetUUID
  params:
  - identifier: C.nvmlDevice_t
  - pointer:
      identifier: C.char
  - identifier: C.uint
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlDeviceGetMinorNumber(nvmlDevice_t device, unsigned int *minorNumber)
- name: nvmlDeviceGetMinorNumber
  params:
  - identifier: C.nvmlDevice_t
  - pointer:
      identifier: C.uint
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlDeviceGetHandleByIndex(unsigned int index, nvmlDevice_t *device)
- name: nvmlDeviceGetHandleByIndex
  params:
  - identifier: C.uint
  - pointer:
      identifier: C.nvmlDevice_t
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlDeviceGetCount(unsigned int *deviceCount)
- name: nvmlDeviceGetCount
  params:
  - pointer:
      identifier: C.uint
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlSystemGetDriverVersion(char *version, unsigned int length)
- name: nvmlSystemGetDriverVersion
  params:
  - pointer:
      identifier: C.char
  - identifier: uint
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlShutdown_dl(void)
- name: nvmlShutdown_dl
  result:
  - identifier: C.nvmlReturn_t
# nvmlReturn_t nvmlInit_dl(void)
- name: nvmlInit_dl
  result:
  - identifier: C.nvmlReturn_t
# const char* nvmlErrorString(nvmlReturn_t result)
- name: nvmlErrorString
  params:
  - identifier: C.nvmlReturn_t
  result:
  - pointer:
      identifier: C.char
# static int load_simple_bpf(int prog_type, int ret)
- name: load_simple_bpf
  params:
  - identifier: C.int
  - identifier: C.int
  result:
  - identifier: C.int
- name: posix_openpt
  params:
  - identifier: C.int
  result:
  - identifier: C.int
# int grantpt(int fd);
- name: grantpt
  params:
  - identifier: C.int
  result:
  - identifier: C.int
# int close(int fildes);
- name: close
  params:
  - identifier: C.int
  result:
  - identifier: C.int
# int unlockpt(int fd);
- name: unlockpt
  params:
  - identifier: C.int
  result:
  - identifier: C.int
# char *ptsname(int fd);
- name: ptsname
  params:
  - identifier: C.int
  result:
  - pointer:
      identifier: C.char

